./: manifest
#############################################################
# Samples on how to link user tests with gtest or gtest_main.

import lib_gtest = gtest%lib{gtest}
import lib_gtest_main = gtest%liba{gtest_main}

# Each sample starts with a *_unittest.cc file.
for sample: cxx{*_unittest}
{
  sample_name = $name($sample)
  sample_prefix = $sample_name # TODO: make it better once I have a way to operate strings (see below)

  # info "GTEST SAMPLE: $sample_name \($sample_prefix\)"

  # Some samples have more than one .cc file, but they all start with the same name.
  ./: exe{$sample_name}: cxx{$sample_prefix} hxx{**}

}

# Almost all samples use gtest_main to define main().
# exe{* -sample9_unittest -sample10_unittest}: $lib_gtest_main # DOES NOT WORK
for idx: 1 2 3 4 5 6 7 8 # How to simplify that?
{
  sample_name = sample$(idx)_unittest
  # info "SAMPLE: $sample_name"
  exe{$sample_name}: $lib_gtest $lib_gtest_main
}
exe{sample9_unittest sample10_unittest} : $lib_gtest # DOES WORK

exe{*}: # Set configuration to all executables defined here.
{
  dist = false
  install = false # No need to install the samples in package.
  test = true # We want to run these samples when testing.
}

# TODO: if I had some way to remove the suffix "_unittest" from the sample name,
# the sample_prefix would have just the rigth name to glob
# and automatically match the files being listed in the CMakeLists.txt file.
# Meanwhile I have to add them manually like in the CMakeLists.txt file ...
exe{sample1_unittest} : {hxx cxx}{sample1}
exe{sample2_unittest} : {hxx cxx}{sample2}
exe{sample3_unittest} : hxx{sample3-inl.h}
exe{sample4_unittest} : {hxx cxx}{sample4}
exe{sample5_unittest} : {hxx cxx}{sample1} hxx{sample3-inl} # I think it's an error in the original CMakeLists.txt